# Python学习笔记


## Day1



- 打印一连串（逗号相连）
print("GC% is",GCp,'%',"/t","G is",G)



- 格式（输出要用“”括住）

Tabs: \t  
Newlines(enter): \n 
Quotes: " 
Backslash: \\

- 几个字母简单重叠
  eco_ri*3   "A"*3
	

## Day2


print(dna_seqs+qPCR_values+patient_ages)  #组合成一个list
print(dna_seqs,qPCR_values,patient_ages)  #单纯展示出几个list

-print (cells_seqs[0])    #this is the item at index 0, thus the list dna_seqs  一个list作为一个item呈现
print (cells_seqs[0][0])    #this is the item at index 0, thus the list dna_seqs  一个list作为一个item呈现,想看list中的item再加一个


**在一个list里添加一个item**
restriction_enzymes.append(my_enzyme) #直接就在restriction_enzymes加了，改变了这个list

如果你不想改变原list，想把这个改变用一个新名字冠名
*v2=restriction_enzymes.append(my_enzyme) # × 显示none
*my_enzyme=[restriction_enzymes,my_enzyme]
→[['gaattc', 'ggatcc', 'aagctt'], 'catgac'] # × 单纯展示list的结合
*a=[restriction_enzymes+my_enzyme]  # × can only concatenate list (not "str") to list
*b=[restriction_enzymes+"catgac"]  # × can only concatenate list (not "str") to list
*c=[restriction_enzymes+[my_enzyme]] # √
*d=restriction_enzymes+[my_enzyme] # √

**把几个item重复几遍再组合一起**
*restriction_enzymes_r1=eco_r1*3+bam_h1*4+hind3*2
gaattcgaattcgaattcggatccggatccggatccggatccaagcttaagctt
*restriction_enzymes_r3=[eco_r1*3, bam_h1*4, hind3*2]
['gaattcgaattcgaattc', 'ggatccggatccggatccggatcc', 'aagcttaagctt']
*restriction_enzymes_r2=[eco_r1]*3+[bam_h1]*4+[hind3]*2
['gaattc', 'gaattc', 'gaattc', 'ggatcc', 'ggatcc', 'ggatcc', 'ggatcc', 'aagctt', 'aagctt']


**循环**

restriction_enzymes = [eco_r1.upper(),bam_h1.upper(),hind3.upper()]  
i=0 #超级无敌关键的第一步!!!不然的话编号总是有问题
for a in restriction_enzymes:
    i+=1
    A=a.count('A')
    T=a.count('T')
    C=a.count('C')
    G=a.count('G')
    print("Enzymes",i,"\n","A:",A,"\t","T:",T,"\t","C:",C,"\t","G:",G)


**在list中添加新item**

1. 直接在屁股后面加
seqs.extend(['cagtcagt','agctcgat','tacgtagc']) 

2. 插队（精确到第几位，下面是空降至第三位）
 seqs.insert(2,'atcg')

**排序**

- seqs.sort() #直接改变seqs的排序并储存
- seq_sorted = sorted(seqs) #把新排序给了一个新变量，没有改变原seqs
- 只按某个变量排以及，倒序排

举例按年龄排序：
students = [('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]
sorted(students, key=lambda s: s[2])            

降序：
sorted(students, key=lambda s: s[2], reverse=True)   
结果：[('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]

**移除某一个item用 remove**
seqs.remove('atcg')#从seqs中移除这个

**list和string互变**

amino = 'Ala Cys Phe Val Glu'.split(' ')  
print (amino) # print what is in the list called amino

print (' '.join(amino)) # print the what is in list amino after combining it by .join

结果：
['Ala', 'Cys', 'Phe', 'Val', 'Glu']
Ala Cys Phe Val Glu

**分割 split**
print ('atgcatgcatgc'.split('t'))
['a', 'gca', 'gca', 'gc']

**字典 dictionary**

属于一种list 花括号 key对应value


> gene = { 'name' : "P53", 'function' : 'DNA-repair', 'length' : '20kb'}
print(gene["length"])

- 改内容

		gene['name'] = 'HCV'
 
- 找第几元素
ps因为字典里其实没有顺序，所以你要把它变成一个传统list，随后才能找第几第几
		
		print(gene(0)) #× 显示TypeError: 'dict' object is not callable

此时又涉及到你想找的是第几key呢还是第几value，以下list后的括号必须要对好！是唯一答案！

	print (list(gene.values())[0])  #找value
	P53
	print(list(gene)[0])#找key
	name

- 根据一个key来找value  
	
		nucleotides={'A':'Adenosine','T':'Thymine','C':'Cytosine','G':'Guanine'}
		if a in nucleotides.keys():
		print (nucleotides[a])
		else:
		print("Can't check its name.")

- 删改

		gene["origin"] = "human" #新增或修改
		del gene["function"] #删

- 加的时候，要确保这个变量是int或者float，可以在一输入的时候确定它

		load=int(input("Enter a virus load(e.g. 1000)."))

2b最后的assignment type不会做。。。

##Day 3
